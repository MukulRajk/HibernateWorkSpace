package in.mindcraft.HQLDemo;

import java.util.List;
import java.util.Scanner;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;
import org.hibernate.service.ServiceRegistry;
import org.hibernate.service.ServiceRegistryBuilder;

class Mymobile {
	private int id;
	private String name;
	private double cost;
	
	public Mymobile() {
		
	}
	
	public Mymobile(int id, String name, double cost) {
		super();
		this.id = id;
		this.name = name;
		this.cost = cost;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public double getCost() {
		return cost;
	}

	public void setCost(double cost) {
		this.cost = cost;
	}

	@Override
	public String toString() {
		return "Mymobile [id=" + id + ", name=" + name + ", cost=" + cost + "]";
	}

	public void show() {
		System.out.println( id+" "+name+" "+cost);
	}
	
}




public class PracticeHQL {
public static void main(String args[]){
	
	Scanner sc=new Scanner(System.in);
Configuration con=new Configuration().configure();
ServiceRegistry reg=new ServiceRegistryBuilder().applySettings(con.getProperties()).buildServiceRegistry();		
SessionFactory sf=con.buildSessionFactory(reg);
Session session=sf.openSession();
Transaction tx=session.beginTransaction();
		

Query query=session.createQuery("from MobilePhone where cost>22000"); 
List<MobilePhone> mlist=query.list();


		
for(MobilePhone m:mlist)
				System.out.println(m);

			/*session.save(m1);
			session.save(m2);
			session.save(m3);//save
			session.save(m4);*/

			tx.commit();
			Mymobile my=new  Mymobile();
			
System.out.println("Welcome ");
System.out.println("1.Add data");
System.out.println("2.Show data");
System.out.println("3.update data");
System.out.println("4.delete data");
int choice=sc.nextInt();
switch(choice) {
case 1:
	System.out.println("enter id,name,cost of mobile");
my.setId(sc.nextInt());	
my.setName(sc.next());
my.setCost(sc.nextDouble());
my.show();

case 2:
	System.out.println("enter id :");
	
my.getId(sc.nextInt());



MobilePhone m=session.get(MobilePhone.class );
System.out.println("Id : "+s.getId());
System.out.println("Name : "+s.getName());
System.out.println("Class : "+s.getStd());
  

	

}

	
}
}
